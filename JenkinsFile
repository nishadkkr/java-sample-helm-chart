pipeline {
    agent any
    
    stages {
        stage("Github Connect") {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/master']], extensions: [], userRemoteConfigs: [[url:'https://github.com/p-nishad/java-sample-helm-chart']]])
                sh 'mvn clean install -DskipTests'
                
            }
        }
        stage('Docker') {
            steps {
                script {
                sh 'docker build -t maven-sample .'
                sh 'docker images'
                }
             }
            }
            stage('AWS ECR Login') {
            steps {
                script {
                sh 'aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/z5n5i3j5'
                }
            }
        }
            stage('AWS ECR push') {
                steps {
                    script {
                    sh 'docker tag maven-sample:latest public.ecr.aws/z5n5i3j5/maven-sample:${BUILD_NUMBER}'
                    sh 'docker push public.ecr.aws/z5n5i3j5/maven-sample:${BUILD_NUMBER}'
                    }
                }
            }
            stage('Helm Push to ECR') {
                steps {
                    sh 'echo version : 1.${BUILD_NUMBER}.1 >> helm-maven/Chart.yaml'
                    sh 'helm package helm-maven'
                    sh 'aws ecr-public get-login-password --region us-east-1 | helm registry login --username AWS --password-stdin public.ecr.aws/z5n5i3j5'
                    sh 'helm push helm-maven-1.${BUILD_NUMBER}.1.tgz oci://public.ecr.aws/z5n5i3j5/'
                    sh 'rm -rf helm-maven-*'
                    }
            }
            stage('Invoke Build number to Pipeline B') {
                steps {
                    build job: 'second', parameters : [[ $class: 'StringParameterValue', name: 'builnum', value: "${BUILD_NUMBER}"]]
                }
            }
        }
        
    }
   